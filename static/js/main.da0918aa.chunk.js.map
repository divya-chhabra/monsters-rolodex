{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","componentDidMount","fetch","then","response","json","users","setState","e","searchField","target","value","state","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJbC,EAAW,SAACR,GAGrB,OADAS,QAAQC,IAAIV,GAER,qBAAKC,UAAU,YAAf,SAEFD,EAAMW,SAASC,KAAI,SAACR,GAClB,OACE,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCThBQ,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAEpC,OACI,uBAAOd,UAAU,SAASe,KAAK,SACxBF,YAAaA,EACbG,SAAUF,MCuCVG,G,wDAzCb,aAAc,IAAD,8BACX,gBAQFC,kBAAoB,WAClBC,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACd,SAASa,QAZ5B,EAgBbT,aAAe,SAACW,GAEV,EAAKD,SAAS,CAACE,YAAYD,EAAEE,OAAOC,SAfxC,EAAKC,MAAQ,CACXnB,SAAS,GACTgB,YAAY,IALH,E,0CAqBb,WACE,MAAgCI,KAAKD,MAA9BnB,EAAP,EAAOA,SAAUgB,EAAjB,EAAiBA,YAEXK,EAAmBrB,EAASsB,QAAQ,SAAC7B,GAE1C,OAAOA,EAAQE,KAAK4B,cAAcC,SAASR,EAAYO,kBAG1D,OACE,sBAAKjC,UAAU,MAAf,UACE,kDAEA,cAAC,EAAD,CAAWa,YAAY,kBAAkBC,aAAcgB,KAAKhB,eAE5D,cAAC,EAAD,CAAUJ,SAAUqB,W,GArCPI,cCOJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.da0918aa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props)=>{\r\n    return(\r\n        <div className=\"card-container\">\r\n        <img alt=\"monsters\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\n\r\nexport const CardList = (props)=>{\r\n\r\n    console.log(props);\r\n    return(\r\n        <div className='card-list'>\r\n            {\r\n      props.monsters.map((monster)=>{\r\n        return(\r\n          <Card key={monster.id} monster={monster}/>\r\n        )\r\n      })\r\n    }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange})=>{\r\n\r\n    return(\r\n        <input className=\"search\" type=\"search\" \r\n               placeholder={placeholder} \r\n               onChange={handleChange} />\r\n    )\r\n}","import React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass  App extends Component{\n\n  constructor(){\n    super();\n\n    this.state = {\n      monsters:[],\n      searchField:\"\"\n    }\n  }\n\n  componentDidMount = ()=>{\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( response => response.json())\n    .then(users => this.setState({monsters:users}));\n\n  }\n\n  handleChange = (e)=>{\n\n        this.setState({searchField:e.target.value});\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n\n    const filteredMonsters = monsters.filter( (monster)=>{\n\n     return(monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    })\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      \n      <SearchBox placeholder=\"Search Monsters\" handleChange={this.handleChange}/>\n      \n      <CardList monsters={filteredMonsters}/>    \n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}